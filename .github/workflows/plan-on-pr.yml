name: "Terraform PR Validatation"

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  terraform:
    name: "Terraform"
    runs-on: ubuntu-latest
    env:
      ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
    strategy:
      fail-fast: false
      matrix:
        environments:
          - dev
          - test
          - prd

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.2.4
      
      - name: Azure Login
        uses: Azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      
      - name: Terraform Format
        id: fmt
        run: |
          cd terraform/environment/${{ matrix.environments }}
          terraform fmt -check -diff
      
      - name: Initialize Terraform and Validate
        run: |
          cd terraform/environment/${{ matrix.environments }}
          terraform init -input=false
          terraform validate
      
      - name: Plan Terraform
        id: plan
        if: github.event_name == 'pull_request'
        continue-on-error: true
        run: |
          cd terraform/environment/${{ matrix.environments }}
          terraform plan -var-file=${{ matrix.environments }}.tfvars -input=false -no-color        

      - name: Post Plan to Github PR 
        uses: actions/github-script@0.9.0
        if: github.event_name == 'pull_request'
        env:
          PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
        with:
          github-token: ${{ secrets.PAT }}
          script: |
            const output = `#### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
            #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
            #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`

            <details><summary>Show Plan</summary>

            \`\`\`${process.env.PLAN}\`\`\`

            </details>

            *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;

              
            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })

      - name: Unit Test Status (Terraform Plan)
        if: steps.plan.outcome == 'failure'
        run: exit 1
